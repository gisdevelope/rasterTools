% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generate.operators.R
\name{nlmGradient}
\alias{nlmGradient}
\title{Build a gradient landscape model}
\usage{
nlmGradient(mat, origin = NULL, type = "planar", params = NULL)
}
\arguments{
\item{mat}{[\code{matrix}]\cr object to which the spatial pattern is added.}

\item{origin}{[\code{RasterLayer} | \code{matrix}]\cr a binary object that
serves as origin of the gradient; overrides the other arguments, if given.}

\item{type}{[\code{Â¢haracter(1)}]\cr the type of the gradient model. Either
\code{"planar"} (default), \code{"point"}, \code{"line"}, \code{"polygon"},
special cases thereof or \code{"random"}, to select one by chance.}

\item{params}{[\code{named list(.)}]\cr geometry-specific parameters with
which the object should be created.}
}
\description{
A gradient can be understood in terms of the distance to an origin.
}
\details{
If this function is used in conjunction with \code{\link{generate}},
  \code{mat} cannot be specified, because \code{generate} assigns it.

In case \code{origin} is not given, \code{nlmGradient} constructs
  internally a binary origin from what is specified in \code{type} and
  \code{params} and then provides a distance matrix as gradient.
}
\examples{
mat <- matrix(nrow = 100, ncol = 100, data = 0)

# create a geometry object
coords <- list(coords = data.frame(x = c(5, 30, 30, 5),
                                   y = c(5, 5, 20, 20)),
               extent = data.frame(x = c(0, 100),
                                   y = c(0, 50)))

# create gradient from a polygon mask with the respective params
#myNLM <- nlmGradient(mat = mat, type = "polygon",
 #                    params = list(anchor = coords, show = FALSE))
#visualise(myNLM)
}
