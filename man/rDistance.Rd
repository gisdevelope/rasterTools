% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/modify.operators.R
\name{rDistance}
\alias{rDistance}
\title{Calculate the distance map for a raster}
\usage{
rDistance(obj, method = "euclidean")
}
\arguments{
\item{obj}{[\code{RasterLayer(1)}]\cr The object to modify.}

\item{method}{[\code{character(1)}]\cr the distance measure to be calculated.
Either \code{"euclidean"} (default), \code{"manhatten"} or
\code{"chessboard"} distance.}
}
\value{
A \code{RasterLayer} of the same dimension as \code{obj}, where the
  value of the background cells has been replaced with the distance to the
  nearest foreground cell.
}
\description{
The distance map of a binarised raster contains the distance of each
background cell to the nearest foreground cell.
}
\details{
In contrast to \code{raster::\link[raster]{distance}}, the distance
  values here do not warp around the boundaries of the map.
}
\examples{
input <- rtData$continuous

# the different distance metrics
binarised <- rBinarise(input, thresh = 40)
disEuc <- rDistance(binarised)
disMan <- rDistance(binarised, method = "manhattan")
disChb <- rDistance(binarised, method = "chessboard")

distances <- raster::stack(binarised, disEuc, disMan, disChb)
visualise(distances)

# calculate distance of edge to patch interior
inverted <- rPermute(binarised)
visualise(rDistance(inverted))
}
\references{
Meijster, A., Roerdink, J.B.T.M., Hesselink, W.H., 2000. A
  general algorithm for computing distance transforms in linear time, in:
  Goutsias, J., Vincent, L., Bloomberg, D.S. (Eds.), Mathematical Morphology
  and Its Applications to Image and Signal Processing. Springer, pp. 331â€“340.
}
\seealso{
Other operators to modify cell values: \code{\link{rBinarise}},
  \code{\link{rCategorise}}, \code{\link{rFillNA}},
  \code{\link{rOffset}}, \code{\link{rPermute}},
  \code{\link{rRange}}, \code{\link{rSubstitute}}
}
