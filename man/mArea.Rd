% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/measure.operators.R
\name{mArea}
\alias{mArea}
\title{Area of objects}
\usage{
mArea(obj, scale = "patch", unit = "cells", layer = NULL)
}
\arguments{
\item{obj}{[\code{Raster*(1)}]\cr The object to measure.}

\item{scale}{[\code{character(1)}]\cr scale at which the area of objects
should be calculated; possible values are \code{"patch"}, \code{"class"}
and \code{"landscape"}.}

\item{unit}{[\code{character(1)}]\cr the unit the output should have. With
\code{"map"} the result will be in the respective map unit and with
\code{"cells"} (default) it will be the number of raster cells.}

\item{layer}{[\code{character(1)}]\cr in case \code{obj} has several layers,
specify here the layer for which the area of objects shall be calculated
(by default, the first layer).}
}
\value{
For \code{scale = "landscape"} the area of the overall raster, for
  \code{scale = "class"} the total area of each unique value (class), for
  \code{scale = "patch"} the area of distinct objects per distinct values
  (i.e. the area of patches per class).
}
\description{
Calculate the area of objects in a raster
}
\examples{
cat <- rtData$categorical
bin <- rBinarise(rtData$continuous, thresh = 40)

# the area ...
# ... per landuse type
mArea(obj = cat, scale = "class")

# ... of patches per landuse type
mArea(obj = cat, scale = "patch")

# ...  of certain values
require(magrittr)
rBinarise(obj = cat, match = c(41, 44, 47)) \%>\%
  mArea(scale = "patch", layer = "values_binarised")

# ... from a binary raster, patches are automatically determined
mArea(obj = bin, scale = "patch")
mArea(obj = bin, scale = "class")

}
\seealso{
Other generic metrics: \code{\link{mAdjacency}},
  \code{\link{mNumber}}, \code{\link{mPerimeter}},
  \code{\link{mValues}}
}
\concept{generic metrics}
