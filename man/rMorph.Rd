% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/modify.operators.R
\name{rMorph}
\alias{rMorph}
\title{Morphologically modify a raster}
\usage{
rMorph(obj, kernel = NULL, blend = NULL, merge = NULL, rotate = TRUE,
  strictKernel = TRUE, background = NULL)
}
\arguments{
\item{obj}{[\code{RasterLayer(1)}]\cr The object to modify.}

\item{kernel}{[\code{matrix(.)} | \code{list(.)} thereof]\cr scan the raster
with this kernel (default is a 3 by 3 cells diamond kernel).}

\item{blend}{[\code{character(1)}]\cr \code{identity}, \code{equal},
\code{lower}, \code{greater}, \code{plus}, \code{minus}, \code{product};
see Details.}

\item{merge}{[\code{character(1)}]\cr \code{min}, \code{max}, \code{all},
\code{any}, \code{sum}, \code{mean}, \code{median}, \code{sd}, \code{cv},
\code{one}, \code{zero}, \code{na}; see Details.}

\item{rotate}{[\code{logical(1)}]\cr should the kernel be applied for all
possible rotations (\code{TRUE}, default) or should the kernel be used as
is (\code{FALSE})?}

\item{strictKernel}{[\code{logical(1)}]\cr}

\item{background}{[\code{integerish(1)}]\cr the value any cell with value NA
should have.}
}
\description{
Morphologically modify a raster
}
\details{
The morphC function (internal) is the basis of many modify
  operations in \code{rasterTools} and \code{rMorph} exposes a fully
  functional interface of this C++ function. The morphC function iteratively
  goes through each pixel of a raster (\code{obj}) and compares the kernel
  with the raster at that location. The result of this comparison depends on
  the arguments \code{blend} and \code{merge}: \itemize{ \item First, all
  values in raster that are covered by the kernel (which may be larger than
  one pixel) are "cut out" and summarised pairwise with \code{kernel} (i.e.
  they are \emph{blended}) by the function defined in \code{blend} (e.g.
  "+"), leaving as many values as cells in \code{kernel}. \item Then these
  values are summarised into a single value (i.e. they are \emph{merged}) by
  the function defined in \code{merge} (e.g. "mean") and the resulting value
  is assigned in the current location in the raster.}

  The following functions are defined for \code{blend}: \enumerate{ \item
  identity: the value of obj where \code{kernel} is not NA. \item equal: the
  value 1 where \code{obj} and \code{kernel} are equal, otherwise the value
  0. \item lower: the values of \code{obj} that are lower than \code{kernel},
  otherwise 0. \item greater: the values of \code{obj} that are greater than
  \code{kernel}, otherwise 0. \item plus: the values of \code{obj} added to
  the values of \code{kernel}. \item minus: the values of \code{kernel}
  subtracted from the values of \code{obj}. \item product: the product of the
  values of \code{obj} and \code{kernel}.} The following functions are
  defined for \code{merge}: \enumerate{ \item min: the minimum value. \item
  max: the maximum value. \item all: the value 1 if all non-NA values are not
  0, otherwise 0. \item any: the value 1 if any of the non-NA values are 0,
  otherwise 0. \item sum: the sum of all non-NA values. \item mean: the mean
  of all non-NA values. \item median: the median of all non-NA values. \item
  sd: the standard deviation of all non-NA values. \item cv: the coefficient
  of variation of all non-NA values. \item sumNa: if the sum of all values is
  greater than 0 than this sum, otherwise NA.}
}
\references{
Credit for the original idea/architecture of the C++ part of this
  function goes to Jon Clayden
  (\href{https://github.com/jonclayden/mmand}{R::mmand}). The functionality
  has been slightly extended here.
}
\seealso{
Other operators to morphologically modify a raster: \code{\link{rDilate}},
  \code{\link{rErode}}
}
