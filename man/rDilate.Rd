% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/modify.operators.R
\name{rDilate}
\alias{rDilate}
\title{Morphologically dilate foreground patches in a raster}
\usage{
rDilate(obj, kernel = NULL)
}
\arguments{
\item{kernel}{[\code{matrix(1)}]\cr scan the raster with this kernel (default
is a 3 by 3 cells diamond kernel).}

\item{ras}{[\code{RasterLayer(1)}]\cr The object to modify.}
}
\value{
A \code{RasterLayer} of the same dimension as \code{obj}, where a
  dilation has been performed.
}
\description{
The morphological operation 'dilate' increases the value of cells along a
gradient of values.
}
\details{
A morphological dilation changes the values in a raster after
  comparing each value to a kernel that moves systematically across the
  raster. A kernel is any 2D array with an odd number of cells in each
  dimension and a focal cell in the middle. The cells of a kernel can have
  four categories of values: 0, 1, NA and any value > 1. When the kernel
  values match the values of the input raster, the input raster cell covered
  by the focal kernel cell is modified according to a specific operation, for
  instance the smallest value covered by the kernel is assigned.

  Rasters are either binary or non-binary (greyscale) rasters. \itemize{
  \item For binary rasters the kernel cells with values 0 and 1 are matched
  accurately in the input raster. Cells with value NA will be ignored, i.e.
  "it does not matter what value is there". \item For a non-binary raster the
  value 0 does not have any meaning and every 0 is turned into an NA. In case
  a non-binary kernel is defined to dilate a non-binary (greyscale) raster,
  each value of the input raster that is currently covered by the kernel is
  summarised with the focal kernel value and the maximum of this set of
  values is assigned to the input raster cell covered by the focal kernel
  cell.}
}
\examples{
input <- rtData$continuous
binarised <- rBinarise(input, thresh = 30)
visualise(rDilate(binarised))

# use another kernel
(myKernel <- matrix(1, 3, 3))
visualise(rDilate(binarised, kernel = myKernel), new = TRUE)

# dilate also non-binary rasters
visualise(raster::stack(input, rDilate(obj = input)))
}
\seealso{
Other operators to morphologically modify a raster: \code{\link{rErode}}
}
